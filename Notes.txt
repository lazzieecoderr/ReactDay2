Why react:
	React is a popular open-source JavaScript library for building user interfaces (UIs) and user interface components. It was developed by Facebook and is widely used for creating dynamic and interactive web applications, particularly for single-page applications.

React allows developers to build reusable UI components and manage the state of a web application efficiently.

Key features and concepts of React include:
1.     Component-Based Architecture
2.     Virtual DOM
3.     One-Way Data Flow
4.     JSX (JavaScript XML)
5.     Component Lifecycle
6.     State Management
7.     Reusable Components
8.     React Router


Library vs Framework Explanation : 
	
Library:
A library is a collection of pre-written code and functionalities that you can use in your own projects to solve specific problems. 
Eg: axios

Framework:
	When using a framework, you build your application within its predefined structure. This can streamline development but might limit flexibility compared to libraries.

Virtual DOM : (Copy of actual/real DOM)
	The Virtual DOM (Document Object Model) is a concept associated with libraries like React.js. It is a programming concept where an ideal or "virtual" representation of the user interface is kept in memory and synced with the "real" DOM by a library, such as React. 

Reconciliation:
=>React then compares the new virtual DOM tree with the previous one, determining the differences or "diffs" between them.
=>This process is known as reconciliation, and it's where React identifies what parts of the virtual DOM have changed.
=>The Virtual DOM helps improve performance by minimizing direct manipulation of the real DOM.


